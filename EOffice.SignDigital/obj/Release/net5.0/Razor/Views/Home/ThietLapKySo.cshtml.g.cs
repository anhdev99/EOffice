#pragma checksum "D:\anhdev99\EOffice\EOffice.SignDigital\Views\Home\ThietLapKySo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ab920f4cb71a259e73f4c256fceea58b8713d203"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_ThietLapKySo), @"mvc.1.0.view", @"/Views/Home/ThietLapKySo.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\anhdev99\EOffice\EOffice.SignDigital\Views\_ViewImports.cshtml"
using EOffice.SignDigital;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\anhdev99\EOffice\EOffice.SignDigital\Views\_ViewImports.cshtml"
using EOffice.SignDigital.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ab920f4cb71a259e73f4c256fceea58b8713d203", @"/Views/Home/ThietLapKySo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e48cedef1017a293cbc83b52b7adf6a8d685d740", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_ThietLapKySo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<EOffice.SignDigital.Models.SignDigital>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "10", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "12", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "16", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "18", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "24", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "32", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "48", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "64", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "72", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "108", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\anhdev99\EOffice\EOffice.SignDigital\Views\Home\ThietLapKySo.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d2036504", async() => {
                WriteLiteral(@"
    <title>anhdev99</title>
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"" integrity=""sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"" crossorigin=""anonymous"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.css"">
    <style>
        body {
            background-color: rgb(82, 86, 89);
        }

        canvas, .canvas-container {
            -webkit-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
            -moz-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
            box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
        }

        .toolbar {
            width: 100%;
            background-color: rgb(50, 54, 57);
            height: 50px;
            position: fixed;
            top: 0;
            left: 0;
            z-index: ");
                WriteLiteral(@"10;
        }

        #pdf-container {
            margin-top: 60px;
            padding-left: 10px;
            text-align: center;
        }

        button:focus {
            outline: 0;
        }

        .toolbar .tool {
            display: inline-block;
            color: #fff;
            height: 100%;
            padding-top: 10px;
            padding-left: 10px;
            margin-right: 5px;
        }

            .toolbar .tool label,
            .toolbar .tool select,
            .toolbar .tool input {
                display: inline-block;
                width: auto;
                height: auto !important;
                padding: 0;
            }

            .toolbar .tool input {
                width: 50px;
            }

            .toolbar .tool .color-tool {
                height: 25px;
                width: 25px;
                border-radius: 25px;
                border: 0;
                cursor: pointer;
                display: inline-");
                WriteLiteral(@"block;
            }

                .toolbar .tool .color-tool.active {
                    -webkit-box-shadow: 3px 4px 5px 0px rgba(0,0,0,0.75);
                    -moz-box-shadow: 3px 4px 5px 0px rgba(0,0,0,0.75);
                    box-shadow: 3px 4px 5px 0px rgba(0,0,0,0.75);
                }

            .toolbar .tool:nth-last-child(1) {
                float: right;
            }

            .toolbar .tool .tool-button {
                background-color: rgb(85, 141, 194);
                border: 1px solid rgb(85, 141, 194);
                color: #fff;
                cursor: pointer;
            }

                .toolbar .tool .tool-button:hover,
                .toolbar .tool .tool-button.active {
                    background-color: rgb(255, 255, 255);
                    border-color: rgb(11, 85, 163);
                    color: rgb(11, 85, 163);
                }

        .btn-save-sign {
            background-color: rgb(85, 141, 194);
            border: 1p");
                WriteLiteral(@"x solid rgb(85, 141, 194);
            color: #fff;
            cursor: pointer;
        }

            .btn-save-sign:hover,
            .btn-save-sign.active {
                background-color: rgb(255, 255, 255);
                border-color: rgb(11, 85, 163);
                color: rgb(11, 85, 163);
            }
    </style>
    <style>
        canvas, .canvas-container {
            margin-bottom: 25px;
        }

        .canvas-container {
            margin-left: auto;
            margin-right: auto;
        }

        .btn-width {
            width: 50px;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20311284", async() => {
                WriteLiteral("\r\n    <div class=\"toolbar\" style=\"background-color: #0C5CA8\">\r\n        <div class=\"tool\">\r\n            <label");
                BeginWriteAttribute("for", " for=\"", 3922, "\"", 3928, 0);
                EndWriteAttribute();
                WriteLiteral("></label>\r\n            <select id=\"font-size\" class=\"form-control\">\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20311903", async() => {
                    WriteLiteral("10");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20313139", async() => {
                    WriteLiteral("12");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20314375", async() => {
                    WriteLiteral("16");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20315934", async() => {
                    WriteLiteral("18");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20317170", async() => {
                    WriteLiteral("24");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20318406", async() => {
                    WriteLiteral("32");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20319642", async() => {
                    WriteLiteral("48");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20320878", async() => {
                    WriteLiteral("64");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20322114", async() => {
                    WriteLiteral("72");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ab920f4cb71a259e73f4c256fceea58b8713d20323350", async() => {
                    WriteLiteral("108");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            </select>\r\n        </div>\r\n");
                WriteLiteral(@"        <div class=""tool"">
            <button class=""btn btn-primary tool-button  btn-sm btn-width""><i class=""fa fa-pencil"" title=""Pencil"" onclick=""enablePencil(event)""></i></button>
        </div>
        <div class=""tool"">
            <button class=""btn btn-primary tool-button  btn-sm btn-width""><i class=""fa fa-font"" title=""Add Text"" onclick=""enableAddText(event)""></i></button>
        </div>
");
                WriteLiteral(@"        <div class=""tool"">
            <button class=""btn btn-primary tool-button  btn-sm btn-width""><i class=""fa fa-picture-o"" title=""Add an Image"" onclick=""addImage(event)""></i></button>
        </div>
        <div class=""tool"">
            <button class=""btn btn-danger btn-sm btn-width"" onclick=""deleteSelectedObject(event)""><i class=""fa fa-trash""></i></button>
        </div>
");
                WriteLiteral(@"        <div class=""tool"">
            <button class=""btn btn-info btn-sm"" onclick=""showPdfData()"">{}</button>
        </div>
        <div class=""tool"">
            <button class=""btn btn-light btn-sm btn-save-sign"" onclick=""savePDF()"" data-target=""#exampleModal""><i class=""fa fa-save""></i> Thiết lập ký số</button>
        </div>
    </div>
    <div id=""pdf-container""></div>

    <div class=""modal fade"" id=""dataModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""dataModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""dataModalLabel"">PDF annotation data</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">×</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <p");
                WriteLiteral(@"re class=""prettyprint lang-json linenums"">
				</pre>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog  modal-dialog-centered"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Thiết lập ký số</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"" id=""kyso"">
                    Đang thực hiện thiết lập ký số ...
                </div>
                <div class=""modal-footer"" style=""display:none""></div>
            </div>
        </div>
    </div>
    <script src=""https://cdnjs");
                WriteLiteral(@".cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"" integrity=""sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"" crossorigin=""anonymous""></script>
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"" integrity=""sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV"" crossorigin=""anonymous""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js""></script>
    <script>pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js';</script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/fabric.js/4.3.0/fabric.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.2.0/jspdf.umd.min.js""></script>
    <script src=""https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js""></script>
    <script src");
                WriteLiteral(@"=""https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.js""></script>
    <script>
        /**
     * From: https://blog.thirdrocktechkno.com/how-to-draw-an-arrow-using-html-5-canvas-and-fabricjs-9500c3f50ecb
     */

        // Extended fabric line class
        fabric.LineArrow = fabric.util.createClass(fabric.Line, {

            type: 'lineArrow',

            initialize: function (element, options) {
                options || (options = {});
                this.callSuper('initialize', element, options);
            },

            toObject: function () {
                return fabric.util.object.extend(this.callSuper('toObject'));
            },

            _render: function (ctx) {
                this.callSuper('_render', ctx);

                // do not render if width/height are zeros or object is not visible
                if (this.width === 0 || this.height === 0 || !this.visible) return;

                ctx.save();

                var xDiff = this.x2 -");
                WriteLiteral(@" this.x1;
                var yDiff = this.y2 - this.y1;
                var angle = Math.atan2(yDiff, xDiff);
                ctx.translate((this.x2 - this.x1) / 2, (this.y2 - this.y1) / 2);
                ctx.rotate(angle);
                ctx.beginPath();
                //move 10px in front of line to start the arrow so it does not have the square line end showing in front (0,0)
                ctx.moveTo(10, 0);
                ctx.lineTo(-20, 15);
                ctx.lineTo(-20, -15);
                ctx.closePath();
                ctx.fillStyle = this.stroke;
                ctx.fill();

                ctx.restore();

            }
        });

        fabric.LineArrow.fromObject = function (object, callback) {
            callback && callback(new fabric.LineArrow([object.x1, object.y1, object.x2, object.y2], object));
        };

        fabric.LineArrow.async = true;


        var Arrow = (function () {
            function Arrow(canvas, color, callback) {
             ");
                WriteLiteral(@"   this.canvas = canvas;
                this.className = 'Arrow';
                this.isDrawing = false;
                this.color = color;
                this.callback = callback;
                this.bindEvents();
            }

            Arrow.prototype.bindEvents = function () {
                var inst = this;
                inst.canvas.on('mouse:down', function (o) {
                    inst.onMouseDown(o);
                });
                inst.canvas.on('mouse:move', function (o) {
                    inst.onMouseMove(o);
                });
                inst.canvas.on('mouse:up', function (o) {
                    inst.onMouseUp(o);
                });
                inst.canvas.on('object:moving', function (o) {
                    inst.disable();
                })
            }

            Arrow.prototype.unBindEventes = function () {
                var inst = this;
                inst.canvas.off('mouse:down');
                inst.canvas.off('mouse:up');");
                WriteLiteral(@"
                inst.canvas.off('mouse:move');
                inst.canvas.off('object:moving');
            }

            Arrow.prototype.onMouseUp = function (o) {
                var inst = this;
                inst.disable();
                inst.unBindEventes();
                if (inst.callback) inst.callback();
            };

            Arrow.prototype.onMouseMove = function (o) {
                var inst = this;
                if (!inst.isEnable()) {
                    return;
                }

                var pointer = inst.canvas.getPointer(o.e);
                var activeObj = inst.canvas.getActiveObject();
                activeObj.set({
                    x2: pointer.x,
                    y2: pointer.y
                });
                activeObj.setCoords();
                inst.canvas.renderAll();
            };

            Arrow.prototype.onMouseDown = function (o) {
                var inst = this;
                inst.enable();
                v");
                WriteLiteral(@"ar pointer = inst.canvas.getPointer(o.e);

                var points = [pointer.x, pointer.y, pointer.x, pointer.y];
                console.log(pointer)
                var line = new fabric.LineArrow(points, {
                    strokeWidth: 5,
                    fill: (inst.color) ? inst.color : 'red',
                    stroke: (inst.color) ? inst.color : 'red',
                    originX: 'center',
                    originY: 'center',
                    hasBorders: false,
                    hasControls: true,
                    selectable: true
                });

                inst.canvas.add(line).setActiveObject(line);
            };

            Arrow.prototype.isEnable = function () {
                return this.isDrawing;
            }

            Arrow.prototype.enable = function () {
                this.isDrawing = true;
            }

            Arrow.prototype.disable = function () {
                this.isDrawing = false;
            }

           ");
                WriteLiteral(@" return Arrow;
        }());
    </script>
    <script>
	/**
 * PDFAnnotate v1.0.1
 * Author: Ravisha Heshan
 */
var pages = [];
var pdfScale = 1.2;


var PDFAnnotate = function(container_id, url, options = {}) {
	this.number_of_pages = 0;
	this.pages_rendered = 0;
	this.active_tool = 1; // 1 - Free hand, 2 - Text, 3 - Arrow, 4 - Rectangle
	this.fabricObjects = [];
	this.fabricObjectsData = [];
	this.color = '#212121';
	this.borderColor = '#000000';
	this.borderSize = 1;
	this.font_size = 16;
	this.active_canvas = 0;
	this.container_id = container_id;
	this.url = url;
	this.pageImageCompression = options.pageImageCompression
    ? options.pageImageCompression.toUpperCase()
    : ""NONE"";
	var inst = this;

	var loadingTask = pdfjsLib.getDocument(this.url);
	loadingTask.promise.then(function (pdf) {
		// var scale = options.scale ? options.scale : 1.3;
	    inst.number_of_pages = pdf.numPages;

	    for (var i = 1; i <= pdf.numPages; i++) {
	        pdf.getPage(i).then(functi");
                WriteLiteral(@"on (page) {
				   var canvas = document.createElement('canvas');
	            var viewport = page.getViewport({scale: 2});

	            document.getElementById(inst.container_id).appendChild(canvas);
	            canvas.className = 'pdf-canvas';
	            canvas.height = viewport.height;
	            canvas.width = viewport.width;
	            context = canvas.getContext('2d');

	            var renderContext = {
	                canvasContext: context,
	                viewport: viewport
				};
	            var renderTask = page.render(renderContext);
	            renderTask.promise.then(function () {
	                $('.pdf-canvas').each(function (index, el) {
	                    $(el).attr('id', 'page-' + (index + 1) + '-canvas');
	                });
	                inst.pages_rendered++;
	                if (inst.pages_rendered == inst.number_of_pages) inst.initFabric();
	            });
	        });
	    }
	}, function (reason) {
	    console.error(reason);
	});

	thi");
                WriteLiteral(@"s.initFabric = function () {
		var inst = this;
		let canvases = $('#' + inst.container_id + ' canvas')
	    canvases.each(function (index, el) {
	        var background = el.toDataURL(""image/png"");
	        var fabricObj = new fabric.Canvas(el.id, {
	            freeDrawingBrush: {
	                width: 1,
	                color: inst.color
	            }
	        });
			inst.fabricObjects.push(fabricObj);
			if (typeof options.onPageUpdated == 'function') {
				fabricObj.on('object:added', function() {
					var oldValue = Object.assign({}, inst.fabricObjectsData[index]);
					inst.fabricObjectsData[index] = fabricObj.toJSON()
					options.onPageUpdated(index + 1, oldValue, inst.fabricObjectsData[index])
				})
			}
	        fabricObj.setBackgroundImage(background, fabricObj.renderAll.bind(fabricObj));
	        $(fabricObj.upperCanvasEl).click(function (event) {
	            inst.active_canvas = index;
	            inst.fabricClickHandler(event, fabricObj);
			});
			fabricObj.on('a");
                WriteLiteral(@"fter:render', function () {
				inst.fabricObjectsData[index] = fabricObj.toJSON()
				fabricObj.off('after:render')
			})

			if (index === canvases.length - 1 && typeof options.ready === 'function') {
				options.ready()
			}
		});
	}

	this.fabricClickHandler = function(event, fabricObj) {
		var inst = this;
	    if (inst.active_tool == 2) {
	        var text = new fabric.IText('Văn bản mẫu', {
	            left: event.clientX - fabricObj.upperCanvasEl.getBoundingClientRect().left,
	            top: event.clientY - fabricObj.upperCanvasEl.getBoundingClientRect().top,
	            fill: inst.color,
	            fontSize: inst.font_size,
	            selectable: true
	        });
	        fabricObj.add(text);
	        inst.active_tool = 0;
	    }
	}

		//
        // function loadPDFJS(pageUrl, canvasContainer) {
        //     var currentPage = 1;
        //     var globalPdf = null;
        //     var container = document.getElementById(canvasContainer);
		//
        //     f");
                WriteLiteral(@"unction renderPage(page) {
        //         var canvas = document.createElement('canvas');
        //         var viewport = page.getViewport(pdfScale);
		//
        //         // append the created canvas to the container
        //         container.appendChild(canvas);
		//
        //         // Get context of the canvas
        //         var context = canvas.getContext('2d');
        //         canvas.height = viewport.height;
        //         canvas.width  = viewport.width;
		//
        //         // Render PDF page into canvas context
        //         var renderContext = {
        //             canvasContext: context,
        //             viewport: viewport
        //         };
		//
        //         page.render(renderContext).then(function () {
        //             if (currentPage < globalPdf.numPages) {
        //                 pages[currentPage] = page;
        //                 currentPage++;
        //                 globalPdf.getPage(currentPage).then(render");
                WriteLiteral(@"Page);
        //             } else {
        //                 // Callback function here, which will trigger when all pages are loaded
        //             }
        //         });
        //     }
		//
        //     pdfjsLib.getDocument(pageUrl).then(function (pdf) {
        //         if(!globalPdf){
        //             globalPdf = pdf;
        //         }
		//
        //         pdf.getPage(currentPage).then(renderPage);
        //     });
        // }
		//
        // loadPDFJS('pdf-lib_creation_example.pdf', 'pdf-container');
}

PDFAnnotate.prototype.enableSelector = function () {
	var inst = this;
	inst.active_tool = 0;
	if (inst.fabricObjects.length > 0) {
	    $.each(inst.fabricObjects, function (index, fabricObj) {
	        fabricObj.isDrawingMode = false;
	    });
	}
}

PDFAnnotate.prototype.enablePencil = function () {
	var inst = this;
	inst.active_tool = 1;
	if (inst.fabricObjects.length > 0) {
	    $.each(inst.fabricObjects, function (index, fabricObj) {");
                WriteLiteral(@"
	        fabricObj.isDrawingMode = true;
	    });
	}
}

PDFAnnotate.prototype.enableAddText = function () {
	var inst = this;
	inst.active_tool = 2;
	if (inst.fabricObjects.length > 0) {
	    $.each(inst.fabricObjects, function (index, fabricObj) {
	        fabricObj.isDrawingMode = false;
	    });
	}
}

PDFAnnotate.prototype.enableRectangle = function () {
	var inst = this;
	var fabricObj = inst.fabricObjects[inst.active_canvas];
	inst.active_tool = 4;
	if (inst.fabricObjects.length > 0) {
		$.each(inst.fabricObjects, function (index, fabricObj) {
			fabricObj.isDrawingMode = false;
		});
	}

	var rect = new fabric.Rect({
		width: 100,
		height: 100,
		fill: inst.color,
		stroke: inst.borderColor,
		strokeSize: inst.borderSize
	});
	fabricObj.add(rect);
}

PDFAnnotate.prototype.enableAddArrow = function () {
	var inst = this;
	inst.active_tool = 3;
	if (inst.fabricObjects.length > 0) {
	    $.each(inst.fabricObjects, function (index, fabricObj) {
	        fabricObj.i");
                WriteLiteral(@"sDrawingMode = false;
	        new Arrow(fabricObj, inst.color, function () {
	            inst.active_tool = 0;
	        });
	    });
	}
}

PDFAnnotate.prototype.addImageToCanvas = function () {
	var inst = this;
	var fabricObj = inst.fabricObjects[inst.active_canvas];

	if (fabricObj) {
		var inputElement = document.createElement(""input"");
		inputElement.type = 'file'
		inputElement.accept = "".jpg,.jpeg,.png,.PNG,.JPG,.JPEG"";
		inputElement.onchange = function() {
			var reader = new FileReader();
			reader.addEventListener(""load"", function () {
				inputElement.remove()
				var image = new Image();
				image.onload = function () {
					fabricObj.add(new fabric.Image(image))
				}
				image.src = this.result;
			}, false);
			reader.readAsDataURL(inputElement.files[0]);
		}
		document.getElementsByTagName('body')[0].appendChild(inputElement)
		inputElement.click()
	}
}

PDFAnnotate.prototype.deleteSelectedObject = function () {
	var inst = this;
	var activeObject = inst.fa");
                WriteLiteral(@"bricObjects[inst.active_canvas].getActiveObject();
	if (activeObject)
	{
	    if (confirm('Bạn chắc chắn xóa đối tượng?')) inst.fabricObjects[inst.active_canvas].remove(activeObject);
	}
}

PDFAnnotate.prototype.savePdf = function (fileName) {
	var inst = this;
	var doc = new jspdf.jsPDF();
	if (typeof fileName === 'undefined') {
		fileName = `${new Date().getTime()}.pdf`;
	}

	inst.fabricObjects.forEach(function (fabricObj, index) {
		if (index != 0) {
			doc.addPage();
			doc.setPage(index + 1);
		}
		doc.addImage(
			fabricObj.toDataURL({
				format: 'png'
			}),
			inst.pageImageCompression == ""NONE"" ? ""PNG"" : ""JPEG"",
			0,
			0,
			doc.internal.pageSize.getWidth(),
			doc.internal.pageSize.getHeight(),
			`page-${index + 1}`,
			[""FAST"", ""MEDIUM"", ""SLOW""].indexOf(inst.pageImageCompression) >= 0
			? inst.pageImageCompression
			: undefined
		);
		if (index === inst.fabricObjects.length - 1) {
		doc.save(fileName);
		var file = doc.output('blob');
		console.log(file);
");
                WriteLiteral("\t\tPostDigital(file);\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction PostDigital(file){\r\n\tvar fd = new FormData();     // To carry on your data\r\n    fd.append(\'fileUpload\',file);\r\n    fd.append(\'fileName\', \"");
#nullable restore
#line 666 "D:\anhdev99\EOffice\EOffice.SignDigital\Views\Home\ThietLapKySo.cshtml"
                      Write(Model.FileName);

#line default
#line hidden
#nullable disable
                WriteLiteral("\");\r\n    fd.append(\'vanBanDiId\',\"");
#nullable restore
#line 667 "D:\anhdev99\EOffice\EOffice.SignDigital\Views\Home\ThietLapKySo.cshtml"
                       Write(Model.VanBanDiId);

#line default
#line hidden
#nullable disable
                WriteLiteral("\");\r\n    fd.append(\'path\',\"");
#nullable restore
#line 668 "D:\anhdev99\EOffice\EOffice.SignDigital\Views\Home\ThietLapKySo.cshtml"
                 Write(Model.Path);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""");
	$.ajax({
       url: 'https://apieoffice.dthu.edu.vn/api/v1/SignDigital/ThietLapKySo',
       //url: 'https://localhost:5001/api/v1/SignDigital/ThietLapKySo',
       data: fd,           //backend language, it may looks like '/model/send.php'
       dataType: 'text',
       processData: false,
       contentType: false,
       type: 'POST',
       success: function (response) {
           console.log(response);
           $(""#kyso"").html(""Thiết lập ký số thành công! Trở về trang văn bản đi"");
       },
       error: function (jqXHR) {
         alter('Failure to send request');
       }
    });
}
PDFAnnotate.prototype.setBrushSize = function (size) {
	var inst = this;
	$.each(inst.fabricObjects, function (index, fabricObj) {
	    fabricObj.freeDrawingBrush.width = size;
	});
}

PDFAnnotate.prototype.setColor = function (color) {
	var inst = this;
	inst.color = color;
	$.each(inst.fabricObjects, function (index, fabricObj) {
        fabricObj.freeDrawingBrush.color = color;
   ");
                WriteLiteral(@" });
}

PDFAnnotate.prototype.setBorderColor = function (color) {
	var inst = this;
	inst.borderColor = color;
}

PDFAnnotate.prototype.setFontSize = function (size) {
	this.font_size = size;
}

PDFAnnotate.prototype.setBorderSize = function (size) {
	this.borderSize = size;
}

PDFAnnotate.prototype.clearActivePage = function () {
	var inst = this;
	var fabricObj = inst.fabricObjects[inst.active_canvas];
	var bg = fabricObj.backgroundImage;
	if (confirm('Are you sure?')) {
	    fabricObj.clear();
	    fabricObj.setBackgroundImage(bg, fabricObj.renderAll.bind(fabricObj));
	}
}

PDFAnnotate.prototype.serializePdf = function() {
	var inst = this;
	return JSON.stringify(inst.fabricObjects, null, 4);
}



PDFAnnotate.prototype.loadFromJSON = function(jsonData) {
	var inst = this;
	$.each(inst.fabricObjects, function (index, fabricObj) {
		if (jsonData.length > index) {
			fabricObj.loadFromJSON(jsonData[index], function () {
				inst.fabricObjectsData[index] = fabricObj.toJSON");
                WriteLiteral("()\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n}\r\n\r\n    </script>\r\n    <script>\r\n\tvar pdf = new PDFAnnotate(\"pdf-container\", \"");
#nullable restore
#line 744 "D:\anhdev99\EOffice\EOffice.SignDigital\Views\Home\ThietLapKySo.cshtml"
                                           Write(Model.Path);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", {
  onPageUpdated(page, oldData, newData) {
    console.log(page, oldData, newData);
  },
  ready() {
    console.log(""Plugin initialized successfully"");
  },
  scale: 1.5,
  pageImageCompression: ""SLOW"", // FAST, MEDIUM, SLOW(Helps to control the new PDF file size)
});

function changeActiveTool(event) {
    var element = $(event.target).hasClass(""tool-button"")
      ? $(event.target)
      : $(event.target).parents("".tool-button"").first();
    $("".tool-button.active"").removeClass(""active"");
    $(element).addClass(""active"");
}

function enableSelector(event) {
    event.preventDefault();
    changeActiveTool(event);
    pdf.enableSelector();
}

function enablePencil(event) {
    event.preventDefault();
    changeActiveTool(event);
    pdf.enablePencil();
}

function enableAddText(event) {
    event.preventDefault();
    changeActiveTool(event);
    pdf.enableAddText();
}

function enableAddArrow(event) {
    event.preventDefault();
    changeActiveTool(event);
    ");
                WriteLiteral(@"pdf.enableAddArrow();
}

function addImage(event) {
    event.preventDefault();
    pdf.addImageToCanvas()
}

function enableRectangle(event) {
    event.preventDefault();
    changeActiveTool(event);
    pdf.setColor('rgba(255, 0, 0, 0.3)');
    pdf.setBorderColor('blue');
    pdf.enableRectangle();
}

function deleteSelectedObject(event) {
  event.preventDefault();
  pdf.deleteSelectedObject();
}

        function savePDF() {
            $('#myModal').modal('toggle');
    // pdf.savePdf();
 var log=   pdf.savePdf('sample.pdf'); // save with given file name
 console.log(pdf)
}

function clearPage() {
    pdf.clearActivePage();
}

function showPdfData() {
    var string = pdf.serializePdf();
    $('#dataModal .modal-body pre').first().text(string);
    PR.prettyPrint();
    $('#dataModal').modal('show');
}

$(function () {
		    $('#pdf-zoom-in').on('click', function() {
                if (pdfScale < 3) {
                    pdfScale += 0.5;
                }
     ");
                WriteLiteral(@"       });

            $('#pdf-zoom-out').on('click', function() {
    			console.log(""Abc"")
                if (pdfScale > 1) {
                    pdfScale -= 0.5;
                }
				// 	 pdf = new PDFAnnotate(""pdf-container"", ""pdf-lib_creation_example.pdf"", {
                //   ready() {
                //     console.log(""Plugin initialized successfully"");
                //   },
                //   scale: pdfScale,
                //   pageImageCompression: ""MEDIUM"", // FAST, MEDIUM, SLOW(Helps to control the new PDF file size)
                // });
            });
    $('.color-tool').click(function () {
        $('.color-tool.active').removeClass('active');
        $(this).addClass('active');
        color = $(this).get(0).style.backgroundColor;
        pdf.setColor(color);
    });

    $('#brush-size').change(function () {
        var width = $(this).val();
        pdf.setBrushSize(width);
    });

    $('#font-size').change(function () {
        var font_size = $(t");
                WriteLiteral("his).val();\r\n        pdf.setFontSize(font_size);\r\n    });\r\n});\r\n\r\n    </script>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EOffice.SignDigital.Models.SignDigital> Html { get; private set; }
    }
}
#pragma warning restore 1591
